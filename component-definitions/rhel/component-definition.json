{
  "component-definition": {
    "uuid": "bc0f407d-8776-4368-a0c7-4239978f4862",
    "metadata": {
      "title": "Component definition for Red Hat Enterprise Linux",
      "last-modified": "2024-07-18T05:52:53+00:00",
      "version": "develop",
      "oscal-version": "1.1.2"
    },
    "components": [
      {
        "uuid": "c7c69c39-1bd0-4144-9131-3531d3a400a9",
        "type": "service",
        "title": "os",
        "description": "RHEL operating system",
        "props": [
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_max_auth_tries",
            "remarks": "rule_set_0"
          },
          {
            "name": "Rule_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure sshd MaxAuthTries is configured",
            "remarks": "rule_set_0"
          },
          {
            "name": "Parameter_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_max_auth_tries_value",
            "remarks": "rule_set_0"
          },
          {
            "name": "Parameter_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "maximum number of authentication attempts permitted per connection",
            "remarks": "rule_set_0"
          },
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_maxstartups",
            "remarks": "rule_set_1"
          },
          {
            "name": "Rule_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure sshd MaxStartups is configured",
            "remarks": "rule_set_1"
          },
          {
            "name": "Parameter_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "var_sshd_set_maxstartups",
            "remarks": "rule_set_1"
          },
          {
            "name": "Parameter_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "maximum number of concurrent unauthenticated connections to the SSH daemon",
            "remarks": "rule_set_1"
          },
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_max_sessions",
            "remarks": "rule_set_2"
          },
          {
            "name": "Rule_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Ensure sshd MaxSessions is configured",
            "remarks": "rule_set_2"
          },
          {
            "name": "Parameter_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "var_sshd_max_sessions",
            "remarks": "rule_set_2"
          },
          {
            "name": "Parameter_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "maximum number of open sessions permitted from a given connection",
            "remarks": "rule_set_2"
          }
        ],
        "control-implementations": [
          {
            "uuid": "e0579b58-07e0-48ed-92a1-e09daa557792",
            "source": "profiles/rhel8-sample/profile.json",
            "description": "Red Hat Enterprise Linux 8 Sample Profile",
            "set-parameters": [
              {
                "param-id": "sshd_max_auth_tries_value",
                "values": [
                  "4"
                ]
              },
              {
                "param-id": "var_sshd_set_maxstartups",
                "values": [
                  "0.438194444"
                ]
              },
              {
                "param-id": "var_sshd_max_sessions",
                "values": [
                  "10"
                ]
              }
            ],
            "implemented-requirements": [
              {
                "uuid": "743c0f8a-2dcc-41e8-aa56-b6725004e166",
                "control-id": "CIS-5.2.16",
                "description": "",
                "props": [
                  {
                    "name": "Rule_Id",
                    "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sshd_set_max_auth_tries"
                  }
                ]
              },
              {
                "uuid": "6ef1081d-5ca0-4167-bd0f-edc70d174429",
                "control-id": "CIS-5.2.17",
                "description": "",
                "props": [
                  {
                    "name": "Rule_Id",
                    "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sshd_set_maxstartups"
                  }
                ]
              },
              {
                "uuid": "19031bff-4ca5-4007-968b-8c913afaa2f4",
                "control-id": "CIS-5.2.18",
                "description": "",
                "props": [
                  {
                    "name": "Rule_Id",
                    "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
                    "value": "sshd_set_max_sessions"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "uuid": "41e94021-6825-469b-b230-87bb0b807a14",
        "type": "Validation",
        "title": "Ansible",
        "description": "Ansible",
        "props": [
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_max_auth_tries",
            "remarks": "rule_set_3"
          },
          {
            "name": "Check_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "check_sshd_set_max_auth_tries",
            "remarks": "rule_set_3"
          },
          {
            "name": "Check_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check sshd MaxAuthTries is configured",
            "remarks": "rule_set_3"
          },
          {
            "name": "Fetcher_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "<Text description or contextual information for rule>\\n\\nInput: <Please provide an Ansible playbook for .. (sample rule desc)>\\n\\nOutput:\\n---\\n <Sample YAML playbook for the Input mentioned above>\\n --- \\n\\n Input: <This is actual rule description for which the playbook is required. Please provide an Ansible playbook for .. (replace .. with rule desc.)>\\n\\n Output:\\n",
            "remarks": "rule_set_3"
          },
          {
            "name": "Checker_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "The <tt>MaxAuthTries</tt> parameter specifies the maximum number of authentication attempts permitted per connection. Once the number of failures reaches half this value, additional failures are logged. to set MaxAUthTries edit <tt>/etc/ssh/sshd_config</tt> as follows: <pre>MaxAuthTries {{{ xccdf_value('sshd_max_auth_tries_value') }}}</pre> \\n Ensure that the SSH server service is enabled. {{{ describe_service_enable(service='sshd') }}} \\n Crypto Policies are means of enforcing certain cryptographic settings for selected applications including OpenSSH server. The SSHD service is by default configured to modify its configuration based on currently configured Crypto-Policy. However, in certain cases it might be needed to override the Crypto Policy specific to OpenSSH Server and leave rest of the Crypto Policy intact. This can be done by dropping a file named <tt>opensshserver-xxx.config</tt>, replacing <tt>xxx</tt> with arbitrary identifier, into <tt>/etc/crypto-policies/local.d</tt>. This has to be followed by running <tt>update-crypto-policies</tt> so that changes are applied. Changes are propagated into <tt>/etc/crypto-policies/back-ends/opensshserver.config</tt>. This rule checks if this file contains predefined <tt>CRYPTO_POLICY</tt> environment variable configured with predefined value. \\n The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon. Additional connections will be dropped until authentication succeeds or the LoginGraceTime expires for a connection. To confgure MaxStartups, you should add or correct the following line in the <tt>/etc/ssh/sshd_config</tt> file: <pre>MaxStartups {{{ xccdf_value('var_sshd_set_maxstartups') }}}</pre> CIS recommends a MaxStartups value of '10:30:60', or more restrictive where dictated by site policy.\\n The <tt>LoginGraceTime</tt> parameter to the SSH server specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate limits to ensure the service is available for needed access. \\n\\n Sample Input: Ansible playbook for Ensure SSH LoginGraceTime is configured \\n\\n Sample Output:\\n--- \\n {'name': 'Ensure SSH LoginGraceTime is configured', 'block': [{'name': 'Check for duplicate values', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'check_mode': True, 'changed_when': False, 'register': 'dupes'}, {'name': 'Deduplicate values from /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'when': 'dupes.found is defined and dupes.found > 1'}, {'name': 'Insert correct line to /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'line': 'LoginGraceTime {{ var_sshd_set_login_grace_time }}', 'state': 'present', 'insertbefore': 'BOF', 'validate': '/usr/sbin/sshd -t -f %s'}}], 'when': ['low_complexity | bool', 'low_disruption | bool', 'medium_severity | bool', 'no_reboot_needed | bool', 'restrict_strategy | bool', 'sshd_set_login_grace_time | bool', 'ansible_virtualization_type not in ['docker', 'lxc', 'openvz', 'podman', 'container']']} \\n--- \\n\\n Input: Please provide an Ansible playbook for Ensure sshd MaxAuthTries is configured \\n\\n Output:\\n",
            "remarks": "rule_set_3"
          },
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_maxstartups",
            "remarks": "rule_set_4"
          },
          {
            "name": "Check_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "check_sshd_set_maxstartups",
            "remarks": "rule_set_4"
          },
          {
            "name": "Check_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check sshd MaxStartups is configured",
            "remarks": "rule_set_4"
          },
          {
            "name": "Fetcher_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "<Text description or contextual information for rule>\\n\\nInput: <Please provide an Ansible playbook for .. (sample rule desc)>\\n\\nOutput:\\n---\\n <Sample YAML playbook for the Input mentioned above>\\n --- \\n\\n Input: <This is actual rule description for which the playbook is required. Please provide an Ansible playbook for .. (replace .. with rule desc.)>\\n\\n Output:\\n",
            "remarks": "rule_set_4"
          },
          {
            "name": "Checker_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon. Additional connections will be dropped until authentication succeeds or the LoginGraceTime expires for a connection. To confgure MaxStartups, you should add or correct the following line in the <tt>/etc/ssh/sshd_config</tt> file: <pre>MaxStartups {{{ xccdf_value('var_sshd_set_maxstartups') }}}</pre> CIS recommends a MaxStartups value of '10:30:60', or more restrictive where dictated by site policy. \\n Ensure that the SSH server service is enabled. {{{ describe_service_enable(service='sshd') }}} \\n Crypto Policies are means of enforcing certain cryptographic settings for selected applications including OpenSSH server. The SSHD service is by default configured to modify its configuration based on currently configured Crypto-Policy. However, in certain cases it might be needed to override the Crypto Policy specific to OpenSSH Server and leave rest of the Crypto Policy intact. This can be done by dropping a file named <tt>opensshserver-xxx.config</tt>, replacing <tt>xxx</tt> with arbitrary identifier, into <tt>/etc/crypto-policies/local.d</tt>. This has to be followed by running <tt>update-crypto-policies</tt> so that changes are applied. Changes are propagated into <tt>/etc/crypto-policies/back-ends/opensshserver.config</tt>. This rule checks if this file contains predefined <tt>CRYPTO_POLICY</tt> environment variable configured with predefined value. \\n The <tt>LoginGraceTime</tt> parameter to the SSH server specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate limits to ensure the service is available for needed access.\\n Verify that the Apparmor tool is configured to control whitelisted applications and user home directory access control.<br/><br/> {{{ describe_service_enable(service='apparmor') }}} \\n\\n Sample Input: Please provide an Ansible playbook for Ensure SSH LoginGraceTime is configured \\n\\n Sample Output:\\n---\\n {'name': 'Ensure SSH LoginGraceTime is configured', 'block': [{'name': 'Check for duplicate values', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'check_mode': True, 'changed_when': False, 'register': 'dupes'}, {'name': 'Deduplicate values from /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'when': 'dupes.found is defined and dupes.found > 1'}, {'name': 'Insert correct line to /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'line': 'LoginGraceTime {{ var_sshd_set_login_grace_time }}', 'state': 'present', 'insertbefore': 'BOF', 'validate': '/usr/sbin/sshd -t -f %s'}}], 'when': ['low_complexity | bool', 'low_disruption | bool', 'medium_severity | bool', 'no_reboot_needed | bool', 'restrict_strategy | bool', 'sshd_set_login_grace_time | bool', 'ansible_virtualization_type not in ['docker', 'lxc', 'openvz', 'podman', 'container']']} \\n --- \\n\\n Input: Please provide an Ansible playbook for Ensure sshd MaxStartups is configured. \\n\\n Output:\\n",
            "remarks": "rule_set_4"
          },
          {
            "name": "Rule_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "sshd_set_max_sessions",
            "remarks": "rule_set_5"
          },
          {
            "name": "Check_Id",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "check_sshd_set_max_sessions",
            "remarks": "rule_set_5"
          },
          {
            "name": "Check_Description",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "Check sshd MaxSessions is configured",
            "remarks": "rule_set_5"
          },
          {
            "name": "Fetcher_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "<Text description or contextual information for rule>\\n\\nInput: <Please provide an Ansible playbook for .. (sample rule desc)>\\n\\nOutput:\\n---\\n <Sample YAML playbook for the Input mentioned above>\\n --- \\n\\n Input: <This is actual rule description for which the playbook is required. Please provide an Ansible playbook for .. (replace .. with rule desc.)>\\n\\n Output:\\n",
            "remarks": "rule_set_5"
          },
          {
            "name": "Checker_Prompt",
            "ns": "http://ibm.github.io/compliance-trestle/schemas/oscal/cd",
            "value": "The <tt>MaxSessions</tt> parameter specifies the maximum number of open sessions permitted from a given connection. To set MaxSessions edit <tt>/etc/ssh/sshd_config</tt> as follows: <pre>MaxSessions {{{ xccdf_value('var_sshd_max_sessions') }}}</pre> \\n Ensure that the SSH server service is enabled. {{{ describe_service_enable(service='sshd') }}} \\n Crypto Policies are means of enforcing certain cryptographic settings for selected applications including OpenSSH server. The SSHD service is by default configured to modify its configuration based on currently configured Crypto-Policy. However, in certain cases it might be needed to override the Crypto Policy specific to OpenSSH Server and leave rest of the Crypto Policy intact. This can be done by dropping a file named <tt>opensshserver-xxx.config</tt>, replacing <tt>xxx</tt> with arbitrary identifier, into <tt>/etc/crypto-policies/local.d</tt>. This has to be followed by running <tt>update-crypto-policies</tt> so that changes are applied. Changes are propagated into <tt>/etc/crypto-policies/back-ends/opensshserver.config</tt>. This rule checks if this file contains predefined <tt>CRYPTO_POLICY</tt> environment variable configured with predefined value. \\n The MaxStartups parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon. Additional connections will be dropped until authentication succeeds or the LoginGraceTime expires for a connection. To confgure MaxStartups, you should add or correct the following line in the <tt>/etc/ssh/sshd_config</tt> file: <pre>MaxStartups {{{ xccdf_value('var_sshd_set_maxstartups') }}}</pre> CIS recommends a MaxStartups value of '10:30:60', or more restrictive where dictated by site policy. \\n The <tt>LoginGraceTime</tt> parameter to the SSH server specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate limits to ensure the service is available for needed access. \\n\\n Sample Input: Please provide an Ansible playbook for Ensure SSH LoginGraceTime is configured \\n\\n Sample Output:\\n--- \\n {'name': 'Ensure SSH LoginGraceTime is configured', 'block': [{'name': 'Check for duplicate values', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'check_mode': True, 'changed_when': False, 'register': 'dupes'}, {'name': 'Deduplicate values from /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'state': 'absent'}, 'when': 'dupes.found is defined and dupes.found > 1'}, {'name': 'Insert correct line to /etc/ssh/sshd_config', 'lineinfile': {'path': '/etc/ssh/sshd_config', 'create': True, 'regexp': '(?i)^\\\\s*LoginGraceTime\\\\s+', 'line': 'LoginGraceTime {{ var_sshd_set_login_grace_time }}', 'state': 'present', 'insertbefore': 'BOF', 'validate': '/usr/sbin/sshd -t -f %s'}}], 'when': ['low_complexity | bool', 'low_disruption | bool', 'medium_severity | bool', 'no_reboot_needed | bool', 'restrict_strategy | bool', 'sshd_set_login_grace_time | bool', 'ansible_virtualization_type not in ['docker', 'lxc', 'openvz', 'podman', 'container']']} \\n --- \\n\\n Input: Please provide an Ansible playbook for Ensure sshd MaxSessions is configured \\\\n\\n Output:\\n",
            "remarks": "rule_set_5"
          }
        ],
        "control-implementations": []
      }
    ]
  }
}